<?xml version="1.0" encoding="utf-8" ?>
<Page
    x:Class="Firebase.Authentication.Sample.WinUI.Views.UserView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:fb="using:Firebase.Authentication.Types"
    xmlns:hlp="using:Firebase.Authentication.Sample.WinUI.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="using:Firebase.Authentication.WinUI.UI"
    xmlns:vm="using:Windows.UI.ViewManagement"
    NavigationCacheMode="Enabled"
    mc:Ignorable="d">

    <StackPanel>
        <StackPanel Name="Header" Margin="-24,-24,-24,0">
            <StackPanel.Background>
                <RadialGradientBrush x:Name="HeaderGradient" GradientOrigin="0.5,-4" RadiusX="0.55" RadiusY="0.5" />
            </StackPanel.Background>

            <Grid
                Width="100"
                Height="100"
                Margin="0,24,0,4"
                CornerRadius="50">
                <Grid.Background>
                    <ImageBrush ImageSource="{x:Bind viewModel.Authentication.CurrentUser.PhotoUrl, Mode=OneWay, Converter={StaticResource DefaultAvataerConverter}}" />
                </Grid.Background>


                <Button
                    Grid.Row="0"
                    Command="{x:Bind viewModel.UploadAvatarCommand}"
                    Style="{StaticResource UploadAvatarButton}" />
                <Button
                    Grid.Row="0"
                    Command="{x:Bind viewModel.RemoveAvatarCommand}"
                    Style="{StaticResource DeleteAvatarButton}" />

            </Grid>
            <TextBlock
                Margin="12,0"
                HorizontalAlignment="Center"
                FontSize="24"
                FontWeight="Medium"
                TextTrimming="CharacterEllipsis">
                <Run Text="Welcome back," />
                <Run Text="{x:Bind viewModel.Authentication.CurrentUser.DisplayName, Mode=OneWay, TargetNullValue='User', FallbackValue='User'}" /><Run Text="!" />
            </TextBlock>

            <TextBlock HorizontalAlignment="Center" Opacity="0.5">
                <Run Text="Last logged in" />
                <Run Text="{x:Bind viewModel.Authentication.CurrentUser.LastLoginAt, Mode=OneWay, Converter={StaticResource DateTimeDifferenceConverter}, TargetNullValue='N/A', FallbackValue='N/A'}" />
                <Run Text="   |   " />
                <Run Text="User created" />
                <Run Text="{x:Bind viewModel.Authentication.CurrentUser.CreatedAt, Mode=OneWay, Converter={StaticResource DateTimeDifferenceConverter}, TargetNullValue='N/A', FallbackValue='N/A'}" />
            </TextBlock>
        </StackPanel>

        <Rectangle
            Height="2"
            MinWidth="420"
            Margin="24,24"
            Fill="{ThemeResource SystemColorWindowTextBrush}"
            Opacity="0.5" />

        <Grid Margin="0,0,0,12" Visibility="{x:Bind viewModel.IsVerifyEmailVisible, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">
            <Button
                Command="{x:Bind viewModel.VerifyEmailCommand}"
                Content="{x:Bind viewModel.Authentication.CurrentUser.Email, Mode=OneWay, TargetNullValue='N/A', FallbackValue='N/A'}"
                Style="{StaticResource VerifyEmailButton}"
                Tag="{x:Bind ui:Icons.ToImageSource(hlp:Icons.Warning, 20, 20)}" />

            <Button
                Margin="8"
                Padding="0"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Command="{x:Bind viewModel.CloseVerifyEmailCommand}">
                <Image
                    Width="12"
                    Height="12"
                    Source="{x:Bind ui:Icons.ToImageSource(hlp:Icons.Cancel, 15, 15)}" />
            </Button>
        </Grid>

        <ContentControl
            Margin="0,0,0,12"
            Style="{StaticResource Container}"
            Tag="Display name">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBox
                    IsReadOnly="{x:Bind viewModel.IsDisplayNameChangeable, Mode=OneWay, Converter={StaticResource InverseBooleanConverter}}"
                    PlaceholderText="None"
                    Text="{x:Bind viewModel.DisplayName, Mode=TwoWay}" />
                <ToggleButton
                    Grid.Column="1"
                    Width="70"
                    Margin="4,0,0,0"
                    Content="{x:Bind viewModel.IsDisplayNameChangeable, Mode=OneWay, Converter={StaticResource BooleanToChangeSaveConverter}, FallbackValue='Change'}"
                    IsChecked="{x:Bind viewModel.IsDisplayNameChangeable, Mode=TwoWay}" />
            </Grid>
        </ContentControl>

        <ContentControl
            Margin="0,0,0,12"
            Style="{StaticResource Container}"
            Tag="{x:Bind viewModel.Authentication.CurrentUser.IsEmailVerified, Mode=OneWay, Converter={StaticResource EmailVerifiedConverter}}"
            Visibility="{x:Bind viewModel.Authentication.CurrentUser.Email, Mode=OneWay, Converter={StaticResource IsNotNullVisibilityConverter}}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBox
                    IsReadOnly="{x:Bind viewModel.IsEmailChangeable, Mode=OneWay, Converter={StaticResource InverseBooleanConverter}}"
                    PlaceholderText="None"
                    Text="{x:Bind viewModel.Email, Mode=TwoWay}" />
                <ToggleButton
                    Grid.Column="1"
                    Width="70"
                    Margin="4,0,0,0"
                    Content="{x:Bind viewModel.IsEmailChangeable, Mode=OneWay, Converter={StaticResource BooleanToChangeSaveConverter}, FallbackValue='Change'}"
                    IsChecked="{x:Bind viewModel.IsEmailChangeable, Mode=TwoWay}" />
            </Grid>
        </ContentControl>

        <ContentControl
            Margin="0,0,0,12"
            Style="{StaticResource Container}"
            Tag="Password"
            Visibility="{x:Bind viewModel.Authentication.CurrentUser.PasswordHash, Mode=OneWay, Converter={StaticResource IsNotNullVisibilityConverter}}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBlock
                    Margin="10,0"
                    VerticalAlignment="Center"
                    FontSize="14">
                    <Run Text="Last updated" />
                    <Run Text="{x:Bind viewModel.Authentication.CurrentUser.PasswordUpdatedAt, Mode=OneWay, Converter={StaticResource DateTimeDifferenceConverter}, TargetNullValue='N/A', FallbackValue='N/A'}" />
                </TextBlock>
                <Button
                    Grid.Column="1"
                    Width="70"
                    Margin="4,0,0,0"
                    Command="{x:Bind viewModel.ChangePasswordCommand}"
                    Content="Change" />
            </Grid>
        </ContentControl>

        <ContentControl
            Margin="0,0,0,12"
            Style="{StaticResource Container}"
            Tag="Sign-in methods">

            <hlp:WrapPanel HorizontalAlignment="Center" Orientation="Horizontal">
                <Button
                    AccessKey="Sign in with email link"
                    Background="#a6e6a800"
                    BorderBrush="#64ffc933"
                    Command="{x:Bind viewModel.RemoveSignInMethodCommand}"
                    CommandParameter="{x:Bind fb:Provider.EmailLink}"
                    Style="{StaticResource SignInMethodButtonStyle}"
                    Tag="{x:Bind ui:Icons.ToImageSource(ui:Icons.EmailAndPassword, 24, 24)}"
                    Visibility="{x:Bind viewModel.Authentication.CurrentUser.Email, Mode=OneWay, Converter={StaticResource IsNotNullVisibilityConverter}}" />
                <Button
                    AccessKey="Sign in with email and password"
                    Background="#a6db4437"
                    BorderBrush="#64e37268"
                    Command="{x:Bind viewModel.RemoveSignInMethodCommand}"
                    CommandParameter="{x:Bind fb:Provider.EmailAndPassword}"
                    Style="{StaticResource SignInMethodButtonStyle}"
                    Tag="{x:Bind ui:Icons.ToImageSource(ui:Icons.EmailAndPassword, 24, 24)}"
                    Visibility="{x:Bind viewModel.Authentication.CurrentUser.PasswordHash, Mode=OneWay, Converter={StaticResource IsNotNullVisibilityConverter}}" />
                <Button
                    AccessKey="Sign in with phone"
                    Background="#a602bd7e"
                    BorderBrush="#6418D696"
                    Command="{x:Bind viewModel.RemoveSignInMethodCommand}"
                    CommandParameter="{x:Bind fb:Provider.PhoneNumber}"
                    Style="{StaticResource SignInMethodButtonStyle}"
                    Tag="{x:Bind ui:Icons.ToImageSource(ui:Icons.PhoneNumber, 24, 24)}"
                    Visibility="{x:Bind hlp:Extensions.ContainsProviderToVisibility(viewModel.UsedSignInMethods, fb:Provider.PhoneNumber), Mode=OneWay}" />
                <Button
                    AccessKey="Sign in with Facebook"
                    Background="#a63b5998"
                    BorderBrush="#645a7abf"
                    Command="{x:Bind viewModel.RemoveSignInMethodCommand}"
                    CommandParameter="{x:Bind fb:Provider.Facebook}"
                    Style="{StaticResource SignInMethodButtonStyle}"
                    Tag="{x:Bind ui:Icons.ToImageSource(ui:Icons.Facebook, 24, 24)}"
                    Visibility="{x:Bind hlp:Extensions.ContainsProviderToVisibility(viewModel.UsedSignInMethods, fb:Provider.Facebook), Mode=OneWay}" />
                <Button
                    AccessKey="Sign in with Google"
                    Background="#ccffffff"
                    BorderBrush="#64d0d0d0"
                    Command="{x:Bind viewModel.RemoveSignInMethodCommand}"
                    CommandParameter="{x:Bind fb:Provider.Google}"
                    Style="{StaticResource SignInMethodButtonStyle}"
                    Tag="{x:Bind ui:Icons.ToImageSource(ui:Icons.Google, 24, 24)}"
                    Visibility="{x:Bind hlp:Extensions.ContainsProviderToVisibility(viewModel.UsedSignInMethods, fb:Provider.Google), Mode=OneWay}" />
                <Button
                    AccessKey="Sign in with Apple"
                    Background="#a6000000"
                    BorderBrush="#64333333"
                    Command="{x:Bind viewModel.RemoveSignInMethodCommand}"
                    CommandParameter="{x:Bind fb:Provider.Apple}"
                    Style="{StaticResource SignInMethodButtonStyle}"
                    Tag="{x:Bind ui:Icons.ToImageSource(ui:Icons.Apple, 24, 24)}"
                    Visibility="{x:Bind hlp:Extensions.ContainsProviderToVisibility(viewModel.UsedSignInMethods, fb:Provider.Apple), Mode=OneWay}" />
                <Button
                    AccessKey="Sign in with Github"
                    Background="#a6333333"
                    BorderBrush="#64595959"
                    Command="{x:Bind viewModel.RemoveSignInMethodCommand}"
                    CommandParameter="{x:Bind fb:Provider.Github}"
                    Style="{StaticResource SignInMethodButtonStyle}"
                    Tag="{x:Bind ui:Icons.ToImageSource(ui:Icons.Github, 24, 24)}"
                    Visibility="{x:Bind hlp:Extensions.ContainsProviderToVisibility(viewModel.UsedSignInMethods, fb:Provider.Github), Mode=OneWay}" />
                <Button
                    AccessKey="Sign in with Twitter"
                    Background="#a655acee"
                    BorderBrush="#648bc6f4"
                    Command="{x:Bind viewModel.RemoveSignInMethodCommand}"
                    CommandParameter="{x:Bind fb:Provider.Twitter}"
                    Style="{StaticResource SignInMethodButtonStyle}"
                    Tag="{x:Bind ui:Icons.ToImageSource(ui:Icons.Twitter, 24, 24)}"
                    Visibility="{x:Bind hlp:Extensions.ContainsProviderToVisibility(viewModel.UsedSignInMethods, fb:Provider.Twitter), Mode=OneWay}" />
                <Button
                    AccessKey="Sign in with Microsoft"
                    Background="#a62f2f2f"
                    BorderBrush="#644d4d4d"
                    Command="{x:Bind viewModel.RemoveSignInMethodCommand}"
                    CommandParameter="{x:Bind fb:Provider.Microsoft}"
                    Style="{StaticResource SignInMethodButtonStyle}"
                    Tag="{x:Bind ui:Icons.ToImageSource(ui:Icons.Microsoft, 24, 24)}"
                    Visibility="{x:Bind hlp:Extensions.ContainsProviderToVisibility(viewModel.UsedSignInMethods, fb:Provider.Microsoft), Mode=OneWay}" />
                <Button
                    AccessKey="Sign in with Yahoo"
                    Background="#a66d528e"
                    BorderBrush="#64896dab"
                    Command="{x:Bind viewModel.RemoveSignInMethodCommand}"
                    CommandParameter="{x:Bind fb:Provider.Yahoo}"
                    Style="{StaticResource SignInMethodButtonStyle}"
                    Tag="{x:Bind ui:Icons.ToImageSource(ui:Icons.Yahoo, 24, 24)}"
                    Visibility="{x:Bind hlp:Extensions.ContainsProviderToVisibility(viewModel.UsedSignInMethods, fb:Provider.Yahoo), Mode=OneWay}" />

                <Button
                    Margin="4"
                    Padding="14"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    Command="{x:Bind viewModel.AddSignInMethodCommand}"
                    Visibility="{x:Bind viewModel.IsAddSignInMethodVisible, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">
                    <Image
                        Width="24"
                        Height="24"
                        Source="{x:Bind ui:Icons.ToImageSource(hlp:Icons.Add, 24, 24)}" />
                </Button>
            </hlp:WrapPanel>
        </ContentControl>

        <StackPanel
            Margin="0,24"
            HorizontalAlignment="Center"
            Orientation="Horizontal"
            Spacing="12">
            <ui:FirebaseAuthenticationButton Command="{x:Bind viewModel.RefreshCommand}" Style="{StaticResource RefreshButtonStyle}" />
            <ui:FirebaseAuthenticationButton Command="{x:Bind viewModel.SignOutCommand}" Style="{StaticResource SignOutButtonStyle}" />
            <ui:FirebaseAuthenticationButton Command="{x:Bind viewModel.DeleteCommand}" Style="{StaticResource DeleteButtonStyle}" />
        </StackPanel>
    </StackPanel>
</Page>
