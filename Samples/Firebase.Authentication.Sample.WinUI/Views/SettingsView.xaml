<?xml version="1.0" encoding="utf-8" ?>
<Page
    x:Class="Firebase.Authentication.Sample.WinUI.Views.SettingsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <StackPanel Spacing="8">
        <TextBlock
            FontSize="24"
            FontWeight="Medium"
            Text="Settings" />
        <Button
            Margin="0,4"
            Padding="8"
            HorizontalAlignment="Stretch"
            Command="{x:Bind viewModel.RestartAppCommand}"
            Content="Updating settings requires app restart" />
        <Rectangle
            Height="2"
            Margin="0,6"
            HorizontalAlignment="Stretch"
            Fill="{ThemeResource SystemColorWindowTextBrush}"
            Opacity="0.5" />

        <ContentControl
            AccessKey="ApiKey"
            Tag="The Firebase Web API key"
            Template="{StaticResource SettignsCard}">
            <TextBox Text="{x:Bind viewModel.Configuration.ApiKey, Mode=TwoWay}" />
        </ContentControl>

        <ContentControl
            AccessKey="HttpTimeout"
            Tag="The time span in which a request times out"
            Template="{StaticResource SettignsCard}">
            <TextBox Text="{x:Bind viewModel.Configuration.HttpTimeout, Mode=TwoWay, Converter={StaticResource TimeSpanConverter}, TargetNullValue='00:00:00'}" />
        </ContentControl>

        <ContentControl
            AccessKey="HttpProxy"
            Tag="The proxy used for web requests"
            Template="{StaticResource SettignsCard}">
            <TextBox Text="{x:Bind viewModel.Configuration.HttpProxy, Mode=TwoWay}" />
        </ContentControl>

        <ContentControl
            AccessKey="Title"
            Tag="The title of the provider flow window. (Use {provider} to use the provider name)"
            Template="{StaticResource SettignsCard}">
            <TextBox Text="{x:Bind viewModel.Configuration.Title, Mode=TwoWay}" />
        </ContentControl>

        <ContentControl
            AccessKey="Icon"
            Tag="The icon of the provider flow window (empty for provider default)"
            Template="{StaticResource SettignsCard}">
            <TextBox Text="{x:Bind viewModel.Configuration.Icon, Mode=TwoWay}" />
        </ContentControl>

        <ContentControl
            AccessKey="StartupLocation"
            Tag="The startup location of the provider flow window"
            Template="{StaticResource SettignsCard}">
            <ComboBox SelectedIndex="{x:Bind viewModel.Configuration.StartupLocation, Mode=TwoWay, Converter={StaticResource EnumIntConverter}}">
                <ComboBoxItem Content="Manual" />
                <ComboBoxItem Content="CenterScreen" />
                <ComboBoxItem Content="CenterOwner" />
            </ComboBox>
        </ContentControl>

        <ContentControl
            AccessKey="Left"
            Tag="The left position of the provider flow window"
            Template="{StaticResource SettignsCard}">
            <NumberBox
                Width="100"
                HorizontalAlignment="Left"
                Minimum="0"
                SpinButtonPlacementMode="Compact"
                Value="{x:Bind viewModel.Configuration.Left, Mode=TwoWay}" />
        </ContentControl>

        <ContentControl
            AccessKey="Top"
            Tag="The top position of the provider flow window"
            Template="{StaticResource SettignsCard}">
            <NumberBox
                Width="100"
                HorizontalAlignment="Left"
                Minimum="0"
                SpinButtonPlacementMode="Compact"
                Value="{x:Bind viewModel.Configuration.Top, Mode=TwoWay}" />
        </ContentControl>

        <ContentControl
            AccessKey="ShowAsDialog"
            Tag="Wether to block the UI thread when showing the provider flow window"
            Template="{StaticResource SettignsCard}">
            <ToggleSwitch IsOn="{x:Bind viewModel.Configuration.ShowAsDialog, Mode=TwoWay}" />
        </ContentControl>

        <ContentControl
            AccessKey="FlowRedirectTo"
            Tag="The url to which the provider will redirect the user back to (empty for provider default)"
            Template="{StaticResource SettignsCard}">
            <TextBox Text="{x:Bind viewModel.Configuration.FlowRedirectTo, Mode=TwoWay}" />
        </ContentControl>

        <ContentControl
            AccessKey="Timeout"
            Tag="The time span in which a user request times out"
            Template="{StaticResource SettignsCard}">
            <TextBox Text="{x:Bind viewModel.Configuration.Timeout, Mode=TwoWay, Converter={StaticResource TimeSpanConverter}, TargetNullValue='00:00:00'}" />
        </ContentControl>

        <ContentControl
            AccessKey="ReCaptchaSiteKey"
            Tag="The reCAPTCHA site key. (You can get your projects reCAPTCHA site key by using 'IAuthenticationClient.GetReCaptchaSiteKeyAsync')"
            Template="{StaticResource SettignsCard}">
            <TextBox Text="{x:Bind viewModel.Configuration.ReCaptchaSiteKey, Mode=TwoWay}" />
        </ContentControl>

        <ContentControl
            AccessKey="ReCaptchaHostName"
            Tag="The reCAPTCHA host name. (This has to be added to the authorized domains to work with ReCaptcha.Desktop)"
            Template="{StaticResource SettignsCard}">
            <TextBox Text="{x:Bind viewModel.Configuration.ReCaptchaHostName, Mode=TwoWay}" />
        </ContentControl>

        <ContentControl
            AccessKey="ImgurClientId"
            Tag="The client ID for the Imgur api used to upload custom profile avatars"
            Template="{StaticResource SettignsCard}">
            <TextBox Text="{x:Bind viewModel.Configuration.ImgurClientId, Mode=TwoWay}" />
        </ContentControl>

    </StackPanel>
</Page>
